//重置样式

* {
    box-sizing: border-box;
    outline: none;
}
html {
    font-size: 13px;
}
body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background-color: #F1F1F1;

}
a {
    color: #999;
}

//定义颜色

$colors:(
    'primary': #db9e3f,
    'white':#fff,
    'black':#000,
    'dark':#222,
    'grey':#999,
    'grey-1':#666,
    'light':#f9f9f9,
    'dark-1':#343440,
);

@each $colorkey,$color in $colors {
    .text-#{$colorkey}{
        color: $color;
    }
    .bg-#{$colorkey}{
        background-color: $color;
    }
}
//文字对齐方式
@each $var in (left,center,right) {
    .text-#{$var} {
        text-align: $var;
    }  
}
$base-font-size:1rem;
$font-sizes:(
    xxs:0.6154,
    xs:0.7692,
    sm:0.9231,
    md:1,
    lg:1.0769,
    xl:1.2308,
);
@each $sizekey,$size in $font-sizes {
    .fs-#{$sizekey}{
        font-size: $size*$base-font-size;
    }
}

//flex

.d-flex {
    display: flex;
}

.flex-column{
    flex-direction: column;
}

$flex-jc:(
    start:flex-start,
    end:flex-end,
    center:center,
    between:space-between,
    around:space-around
);

@each $Key,$val in $flex-jc {
    .jc-#{$Key}{
        justify-content: $val;
    }
}
$flex-ai:(
    start:flex-start,
    end:flex-end,
    center:center,
    stretch:stretch,
);

@each $Key,$val in $flex-ai {
    .ai-#{$Key}{
        align-items: $val;
    }
}
.flex-1 {
    flex: 1;
}
.flex-grow-1 {
    flex-grow: 1;
}

//边距
$spacing-types: (
  m: margin,
  p: padding,
);
$spacing-directions: (
  t: top,
  r: right,
  b: bottom,
  l: left,
);
$spacing-base-size: 1rem;
$spacing-sizes: (
  0: 0,
  1: 0.25,
  2: 0.5,
  3: 1,
  4: 1.5,
  5: 3,
);
@each $typeKey, $type in $spacing-types {
    // .m-1
    @each $sizeKey, $size in $spacing-sizes {
      .#{$typeKey}-#{$sizeKey} {
        #{$type}: $size * $spacing-base-size;
      }
    }
    @each $sizeKey, $size in $spacing-sizes {
        .#{$typeKey}x-#{$sizeKey} {
          #{$type}-left: $size * $spacing-base-size;
          #{$type}-right: $size * $spacing-base-size;
        }
        .#{$typeKey}y-#{$sizeKey} {
          #{$type}-top: $size * $spacing-base-size;
          #{$type}-bottom: $size * $spacing-base-size;
        }
      }
    @each $directionKey, $direction in $spacing-directions {
        @each $sizeKey, $size in $spacing-sizes {
          .#{$typeKey}#{$directionKey}-#{$sizeKey} {
            #{$type}-#{$direction}: $size * $spacing-base-size;
          }
        }
    }
}
.btn {
    border: none;
    border-radius: 0.1538rem;
    font-size: map-get($font-sizes,'sm')*$base-font-size;
    padding: 0.2rem 0.6rem;
}

//nav
.nav {
    .nav-item {
        border-bottom:3px solid transparent;
        padding-bottom: 0.2rem;
   
    &.active {
        border-bottom:3px solid #fff;

    }
}
}